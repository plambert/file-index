#!/usr/bin/env perl

use Modern::Perl qw/2014/;
use Path::Tiny;
use FindBin;
use lib "${FindBin::Bin}/../lib";
use Regexp::Grammars;
use JSON::MaybeXS;
use File::Index::Schema;
use DBI;

my $dbdir=path '~/.file-index';
my $dbfile=path $dbdir, 'default.sqlite3';

while(@ARGV) {
  my $opt=shift @ARGV;
  if ($opt eq '-f' or $opt eq '--file') {
    my $file=shift @ARGV;
    die sprintf "%s: %s: requires argument\n", path($0)->basename, $opt unless defined $file and length $file;
    $file .= '.sqlite3' unless $file =~ m{\.sqlite3$};
    $dbfile=path($file)->absolute;
  }
  elsif ($opt eq '-n' or $opt eq '--name') {
    my $file=shift @ARGV;
    die sprintf "%s: %s: requires file name\n", path($0)->basename, $opt unless defined $file and length $file and $file !~ m{/};
    $file .= '.sqlite3' unless $file =~ m{\.sqlite3$};
    $dbfile=path($dbdir, $file);
  }
  elsif ($opt =~ m{^-}) {
    die sprintf "%s: %s: unknown option\n", path($0)->basename, $opt;
  }
  else {
    $dbfile=path $opt;
  }
}

my @sql=File::Index::Schema->db_init_sql;

$dbfile->parent->mkpath unless -d $dbfile->parent;

if (-f $dbfile) {
  my $copy=$dbfile->sibling($dbfile->basename . ".old");
  $copy->remove if -f $copy;
  $dbfile->move($copy);
}

my $dbh=DBI->connect(sprintf("dbi:SQLite:dbname=%s", $dbfile), undef, undef, { AutoCommit => 1, RaiseError => 1});

for my $sql (@sql) {
  print $sql;
  $dbh->do($sql);
}

sub schema {
  return ;
}
